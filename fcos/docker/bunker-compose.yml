services:
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: always
    environment:
      DOMAIN:
      SIGNUPS_ALLOWED: "true"
    volumes:
      - /home/bunker/vw-data:/data:z
    ports:
      - 80:80
  wg-easy:
    image: ghcr.io/wg-easy/wg-easy:15
    container_name: wg-easy
    restart: unless-stopped
    networks:
      wg:
        ipv4_address:
    volumes:
      - /home/bunker/etc_wireguard:/etc/wireguard:z
      - /lib/modules:/lib/modules:z
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=1
  keycloak:
    command: start-dev
    image: quay.io/keycloak/keycloak:26.1.3
    environment:
      - KC_BOOTSTRAP_ADMIN_PASSWORD=
      - KC_BOOTSTRAP_ADMIN_USERNAME=
    ports:
      - 8080:8080
  searxng:
    container_name: searxng
    image: searxng/searxng
    environment:
      - INSTANCE_NAME=lly-searxng
      - "BASE_URL=http://localhost:8888/"
    volumes:
      - /home/bunker/searxng:/etc/searxng:z
    ports:
      - 8888:8888
  13ft:
    container_name: 13ft
    hostname: 13ft
    image: ghcr.io/wasi-master/13ft:latest
    restart: unless-stopped
    ports:
      - 5000:5000
  maybe:
    image: ghcr.io/maybe-finance/maybe:latest
    volumes:
      - /home/bunker/maybe:/rails/storage:z
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      SELF_HOSTED: "true"
      RAILS_FORCE_SSL: "false"
      RAILS_ASSUME_SSL: "false"
      GOOD_JOB_EXECUTION_MODE: async
      SECRET_KEY_BASE: ${SECRET_KEY_BASE:?}
      DB_HOST: postgres
      POSTGRES_DB: ${POSTGRES_DB:-maybe_production}
      POSTGRES_USER: ${POSTGRES_USER:-maybe_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - /home/bunker/postgres:/var/lib/postgresql/data:z
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-maybe_user}
      POSTGRES_DB: ${PSOTGRES_DB:-maybe_production}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5


  networks:
    wg:
      driver: bridge
      enable_ipv6: false
      ipam:
        driver: default
        config:
          - subnet:
